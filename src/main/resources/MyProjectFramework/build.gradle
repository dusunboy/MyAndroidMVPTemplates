buildscript {
    repositories {
//        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
        //添加apt插件
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }

    // Exclude the lombok version that the android plugin depends on.
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'


android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        applicationId "$Package"
        minSdkVersion 15
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0.0"

        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    dexOptions {
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "2g"//越大越好
        incremental true
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    productFlavors {
        demo {
            minSdkVersion 15
            targetSdkVersion TARGET_SDK_VERSION as int
            applicationId "$Package"
            versionCode 1
            versionName "1.0.0"
        }
    }
    repositories {
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-annotations:' + SUPPORT_V4_VERSION
    compile 'com.android.support:appcompat-v7:' + SUPPORT_V7_VERSION
    compile "com.android.support:support-v4:" + SUPPORT_V4_VERSION
    compile "com.android.support:recyclerview-v7:" + SUPPORT_V7_VERSION
    compile "com.android.support:design:" + SUPPORT_DESIGN_VERSION
    compile "com.loopj.android:android-async-http:" + ASYNC_HTTP_VERISON

    compile "io.reactivex.rxjava2:rxandroid:" + RXJAVA2_ANDROID_VERSION
// Because RxAndroid releases are few and far between, it is recommended you also
// explicitly depend on RxJava's latest version for bug fixes and new features.
    compile "io.reactivex.rxjava2:rxjava:" + RXJAVA2_VERSION

    compile "com.trello.rxlifecycle2:rxlifecycle:" + RXLIFECYCLE2_VERSION
// If you want to bind to Android-specific lifecycles
    compile "com.trello.rxlifecycle2:rxlifecycle-android:" + RXLIFECYCLE2_VERSION
// If you want pre-written Activities and Fragments you can subclass as providers
    compile "com.trello.rxlifecycle2:rxlifecycle-components:" + RXLIFECYCLE2_VERSION

    compile "com.jakewharton.rxbinding2:rxbinding:" + RXBINDING2_VERSION

    //引入dagger2
    compile "com.google.dagger:dagger:" + DAGGER2_VERSION
    apt "com.google.dagger:dagger-compiler:" + DAGGER2_VERSION

    //引入retrofit2
    compile "com.squareup.retrofit2:retrofit:" + RETROFIT2_VERSION
    compile "com.squareup.retrofit2:converter-gson:" + RETROFIT2_VERSION
    compile "com.squareup.retrofit2:adapter-rxjava2:" + RETROFIT2_VERSION
    compile "com.squareup.okhttp3:logging-interceptor:" + OKHTTP3_LOGGING_VERSION

    compile "com.google.code.gson:gson:" + GSON_VERISON
    compile "com.github.bumptech.glide:glide:" + GLIDE_VERSION
    compile 'com.github.dusunboy.MyRecyclerViewAdapter:library:' + MY_RECYCLERVIEW_ADAPTER_VERSION
    compile "com.daimajia.numberprogressbar:library:" + NUMBER_PROGRESS_BAR_VERSION

    compile 'com.tencent.bugly:crashreport:' + BUGLY_VERSION
    debugCompile "com.squareup.leakcanary:leakcanary-android:" + LEAKCANARY_VERSION
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:" + LEAKCANARY_VERSION
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:" + LEAKCANARY_VERSION


}
