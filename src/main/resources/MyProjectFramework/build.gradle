apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    signingConfigs {
        config {
            keyAlias 'demokey'
            keyPassword 'demokey'
            storeFile file('apk/demokey.jks')
            storePassword 'demokey'
        }
    }
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        applicationId "$Package"
        minSdkVersion 15
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0.0"
        aaptOptions.cruncherEnabled = false
        aaptOptions.useNewCruncher = false
//        ndk {
//            //设置支持的SO库架构
//            abiFilters  'armeabi-v7a'// , 'x86', 'x86_64', 'arm64-v8a', 'mips' , //'armeabi'
//        }
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    //过滤掉不支持的平台
    packagingOptions {
        exclude "lib/arm64-v8a/librealm-jni.so"
        exclude "lib/mips/librealm-jni.so"
        exclude "lib/x86/librealm-jni.so"
        exclude "lib/x86_64/librealm-jni.so"
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a'
        }
    }
    dexOptions {
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "2g"//越大越好
//        incremental true
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            zipAlignEnabled true
//            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
//            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    //    单维度ProductFlavor时产生的BuildVariant
    flavorDimensions "channle"
    productFlavors {
        demo {
            minSdkVersion 15
            targetSdkVersion TARGET_SDK_VERSION as int
            buildConfigField "String","file_provider_authorities","\"$Package.demo.fileprovider\""
            manifestPlaceholders = [
                    FILE_PROVIDER_AUTHORITIES:"$Package.demo.fileprovider",
                    APP_NAME:"$Project(测)",
            ]
            applicationId "$Package.demo"
            versionCode 1
            versionName "1.0.0"
            dimension "channle"
        }

        official {
            minSdkVersion 15
            targetSdkVersion TARGET_SDK_VERSION as int
            buildConfigField "String","file_provider_authorities","\"$Package.fileprovider\""
            manifestPlaceholders = [
                    FILE_PROVIDER_AUTHORITIES:"$Package.fileprovider",
                    APP_NAME:"$Project",
            ]
            applicationId "$Package"
            versionCode 1
            versionName "1.0.0"
            dimension "channle"
        }
    }
    repositories {
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:" + KOTLIN_VERSION
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:' + SUPPORT_V7_VERSION
    implementation "com.android.support:support-v4:" + SUPPORT_V4_VERSION
    implementation "com.android.support:recyclerview-v7:" + SUPPORT_V7_VERSION
    implementation "com.android.support:design:" + SUPPORT_DESIGN_VERSION
    implementation 'com.android.support.constraint:constraint-layout:' + CONSTRAINT_LAYOUT_VERSION
    implementation "com.loopj.android:android-async-http:" + ASYNC_HTTP_VERISON

    implementation "io.reactivex.rxjava2:rxandroid:" + RXJAVA2_ANDROID_VERSION
// Because RxAndroid releases are few and far between, it is recommended you also
// explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation "io.reactivex.rxjava2:rxjava:" + RXJAVA2_VERSION

    implementation "com.trello.rxlifecycle2:rxlifecycle:" + RXLIFECYCLE2_VERSION
// If you want to bind to Android-specific lifecycles
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:" + RXLIFECYCLE2_VERSION
// If you want pre-written Activities and Fragments you can subclass as providers
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:" + RXLIFECYCLE2_VERSION

    implementation "com.jakewharton.rxbinding2:rxbinding:" + RXBINDING2_VERSION

    //引入dagger2
    implementation "com.google.dagger:dagger:" + DAGGER2_VERSION
    annotationProcessor 'com.google.dagger:dagger-compiler:' + DAGGER2_VERSION

    //引入retrofit2
    implementation "com.squareup.retrofit2:retrofit:" + RETROFIT2_VERSION
    implementation "com.squareup.retrofit2:converter-gson:" + RETROFIT2_VERSION
    implementation "com.squareup.retrofit2:adapter-rxjava2:" + RETROFIT2_VERSION
    implementation "com.squareup.okhttp3:logging-interceptor:" + OKHTTP3_LOGGING_VERSION

    implementation "com.google.code.gson:gson:" + GSON_VERISON
    implementation 'com.google.android:flexbox:' + FLEX_BOX_VERSION
    implementation "com.github.bumptech.glide:glide:" + GLIDE_VERSION
    annotationProcessor 'com.github.bumptech.glide:compiler:'  + GLIDE_VERSION
    implementation 'com.github.bumptech.glide:okhttp3-integration:' + GLIDE_VERSION
    implementation 'com.github.dusunboy.MyRecyclerViewAdapter:library:' + MY_RECYCLERVIEW_ADAPTER_VERSION
    implementation "com.daimajia.numberprogressbar:library:" + NUMBER_PROGRESS_BAR_VERSION

    implementation 'com.tencent.bugly:crashreport:' + BUGLY_VERSION
    debugImplementation "com.squareup.leakcanary:leakcanary-android:" + LEAKCANARY_VERSION
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:" + LEAKCANARY_VERSION
    androidTestImplementation "com.squareup.leakcanary:leakcanary-android-no-op:" + LEAKCANARY_VERSION
    implementation "com.android.support:multidex:" + MULTIDEX_VERSION
    implementation 'com.readystatesoftware.systembartint:systembartint:' + SYSTEMBARTINT_VERSION
    implementation 'com.contrarywind:Android-PickerView:' + ANDROID_PICKER_VIEW
    implementation 'com.github.HuanTanSheng:EasyPhotos:' + EASYPHOTOS_VERSION
    implementation "pub.devrel:easypermissions:" + EASYPERMISSIONS_VERSION
    //chrome://inspect/#devices
    implementation 'com.facebook.stetho:stetho:' + STETHO_VERSION
}
